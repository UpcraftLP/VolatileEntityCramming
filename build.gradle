plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

def ENV = System.getenv()
def buildTime = ENV.BUILD_TIME ?: new Date().format('yyyyMMddHHmmss')

group = "dev.upcraft"
archivesBaseName = "volatile-entity-cramming"

def buildNumber = !ENV.TAG ? ((ENV.BUILD_NUMBER ? "build.${ENV.BUILD_NUMBER}" : buildTime) + "-") : ""
def buildMeta = (!ENV.TAG || ENV.TAG.matches(".+-.+")) ? "+${buildNumber}${project.minecraft_version}" : ""
version = "${ENV.TAG ?: "development"}${buildMeta}"


repositories {
	maven {
		name = "OnyxStudios"
		url = "https://maven.onyxstudios.dev"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modRuntime "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modApi ("io.github.GlassPane:Mesh-API:${project.mesh_version}") {
		exclude group: "net.fabricmc.fabric-api"
	}
	modImplementation(include("io.github.GlassPane:Mesh:${project.mesh_version}")) {
		exclude group: "net.fabricmc.fabric-api"
	}
	modImplementation(include("me.shedaniel.cloth:config-2:${project.cloth_version}")) {
		transitive false
	}
	runtimeOnly "me.zeroeightsix:fiber:${project.fiber_version}" //force version to resolve conflicts

	compileOnly "org.jetbrains:annotations:20.1.0"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	int targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release.set(targetVersion)
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// Select the repositories you want to publish to
	// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
	repositories {
		// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	}
}
